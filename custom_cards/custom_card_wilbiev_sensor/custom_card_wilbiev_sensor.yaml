---
custom_card_wilbiev_sensor:
  template:
    - "icon_info_bg"
    - "ulm_translation_engine"
    - "custom_card_wilbiev_sensor_language_variables"
  variables:
    ulm_custom_card_wilbiev_sensor_battery_warning: 20
    ulm_custom_card_wilbiev_sensor_battery_warning_low: 5
    ulm_custom_card_wilbiev_sensor_type: "sensor"
    ulm_custom_card_wilbiev_sensor_icon_color_on: "blue"
    ulm_custom_card_wilbiev_sensor_icon_color_off: "grey"
    ulm_custom_card_wilbiev_sensor_alarm: false
  tap_action:
    action: |
      [[[
        return (entity.entity_id.startsWith("switch.") || entity.entity_id.startsWith("input_boolean.")) ? "toggle" : "more-info";
      ]]]
  show_label: true
  show_name: true
  triggers_update:
    - "[[[ return entity.entity_id; ]]]"
  label: "[[[ return variables.ulm_translation_state ]]]"
  icon: |
    [[[
      if (variables.ulm_custom_card_wilbiev_sensor_icon_on != undefined && entity.state == "on")
        return variables.ulm_custom_card_wilbiev_sensor_icon_on;
      return "";
    ]]]
  styles:
    icon:
      - color: |
          [[[
            if (variables.ulm_custom_card_wilbiev_sensor_type == "button") {
              return 'rgba(var(--color-grey),1)';
            }
            if (variables.ulm_custom_card_wilbiev_sensor_type == "progress") {
              if (entity.state == "Ready")
                return 'rgba(var(--color-green),1)';
              if (entity.state == "Run")
                return 'rgba(var(--color-red),1)';
              if (entity.state == "Finished")
                return 'rgba(var(--color-yellow),1)';
            }
            if (variables.ulm_custom_card_wilbiev_sensor_type == "sensor") {
              if (entity.state == "off")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_off}), 1)`;
              if (entity.state == "on")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_on}), 1)`;
            }
            if (variables.ulm_custom_card_wilbiev_sensor_type == "brush") {
              if (entity.state == "idle")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_off}), 1)`;
              if (entity.state == "running")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_on}), 1)`;
            }
            return 'rgba(var(--color-theme),0.2)';
          ]]]
    img_cell:
      - background-color: |
          [[[
            if (variables.ulm_custom_card_wilbiev_sensor_type == "button") {
              return 'rgba(var(--color-grey), 0.2)';
            }
            if (variables.ulm_custom_card_wilbiev_sensor_type == "progress") {
              if (entity.state == "Ready")
                return 'rgba(var(--color-green), 0.2)';
              if (entity.state == "Run")
                return 'rgba(var(--color-red), 0.2)';
              if (entity.state == "Finished")
                return 'rgba(var(--color-yellow), 0.2)';
            }
            if (variables.ulm_custom_card_wilbiev_sensor_type == "sensor") {
              if (entity.state == "off")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_off}), 0.2)`;
              if (entity.state == "on")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_on}), 0.2)`;
            }
            if (variables.ulm_custom_card_wilbiev_sensor_type == "brush") {
              if (entity.state == "idle")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_off}), 0.2)`;
              if (entity.state == "running")
                return `rgba(var(--color-${variables.ulm_custom_card_wilbiev_sensor_icon_color_on}), 0.2)`;
            }
            return 'rgba(var(--color-theme),0.05)';
          ]]]
      - border-radius: "50%"
      - place-self: "center"
      - width: "42px"
      - height: "42px"
    grid:
      - position: "relative"
    custom_fields:
      notification_exclamation:
        - border-radius: "50%"
        - position: "absolute"
        - left: "28px"
        - top: "-6px"
        - height: "16px"
        - width: "16px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "12px"
        - line-height: "14px"
        - background-color: "[[[ return 'rgba(var(--color-red),1)'; ]]]"
      notification_battery:
        - border-radius: "50%"
        - position: "absolute"
        - left: "-6px"
        - top: "-6px"
        - height: "16px"
        - width: "16px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "12px"
        - line-height: "14px"
        - background-color: |
            [[[
              if (variables.ulm_custom_card_wilbiev_sensor_battery_level !== undefined && variables.ulm_custom_card_wilbiev_sensor_type != "progress") {
                if (states[variables.ulm_custom_card_wilbiev_sensor_battery_level].state <= variables.ulm_custom_card_wilbiev_sensor_battery_warning_low) {
                  return "rgba(var(--color-red),1)";
                } else if (states[variables.ulm_custom_card_wilbiev_sensor_battery_level].state <= variables.ulm_custom_card_wilbiev_sensor_battery_warning) {
                  return "rgba(var(--color-yellow),1)";
                }
              }
            ]]]
      battery_info:
        - position: "absolute"
        - right: "6px"
        - top: "6px"
        - width: "25px"
        - height: "25px"

  custom_fields:
    notification_exclamation: >
      [[[
          if (variables.ulm_custom_card_wilbiev_sensor_alarm && entity.state == "on") {
            return `<span title="alarm"><ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon></span>`;
          }
      ]]]
    notification_battery: >
      [[[
          if (variables.ulm_custom_card_wilbiev_sensor_battery_level !== undefined && variables.ulm_custom_card_wilbiev_sensor_type != "progress") {
            if (variables.ulm_custom_card_wilbiev_sensor_battery_warning >= states[variables.ulm_custom_card_wilbiev_sensor_battery_level].state) {
              return `<span title="${variables.ulm_custom_card_wilbiev_sensor_battery_is_at} ${states[variables.ulm_custom_card_wilbiev_sensor_battery_level].state}%">
                        <ha-icon icon="mdi:battery-low" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>
                      </span>`;
            }
          }
      ]]]
    battery_info: |
      [[[
          if (variables.ulm_custom_card_wilbiev_sensor_battery_level !== undefined){
            const battery = Math.round((states[variables.ulm_custom_card_wilbiev_sensor_battery_level].state)/1);
            const radius = 20.5; const circumference = radius * 2 * Math.PI;
            return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}"
            stroke="green" stroke-width="3" fill="var(--card-background-color)"
            style="transform: rotate(-90deg); transform-origin: 50% 50%;
            stroke-dasharray: ${circumference};
            stroke-dashoffset: ${circumference - battery / 100 * circumference};" />
            <text x="50%" y="54%" fill="var(--primary-text-color)" font-size="16" font-weight= "bold"
            text-anchor="middle" alignment-baseline="middle">
            ${battery}<tspan font-size="10">%</tspan></text></svg>`;}
      ]]]
